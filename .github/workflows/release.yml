name: Release to npm

on:
  # Fire only after the "Tests" workflow completes
  workflow_run:
    workflows: ["Tests"]   # must match your Tests workflow name exactly
    types: [completed]

permissions:
  contents: read           # default for all jobs; least-privileged

concurrency:
  group: release-${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: false

jobs:
  publish:
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'push' &&
      github.event.workflow_run.head_branch == 'main' &&
      github.event.workflow_run.head_repository.full_name == github.repository

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    environment:
      name: npm

    steps:
      - name: Checkout (pinned SHA, full history)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
          cache: npm

      - name: Install
        run: npm ci

      - name: Test
        run: npm test -- --ci

      - name: Build
        run: npm run build --if-present

      - name: Disable npm lifecycle scripts (safety)
        run: |
          npm config set ignore-scripts true
          echo "npm_config_ignore_scripts=true" >> $GITHUB_ENV

      - name: Read pkg name & version
        id: pkg
        run: |
          echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Skip if version already on npm
        id: exists
        run: |
          if npm view "${{ steps.pkg.outputs.name }}@${{ steps.pkg.outputs.version }}" version >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm (with provenance)
        if: steps.exists.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_TOKEN_FROM_KOTAPI }}
        run: npm publish --access public --provenance
